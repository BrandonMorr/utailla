<?php
/**
 * @file
 * Main hooks.
 */

// Objects.
define('UTAILLA_COLLECTION', 'ailla:collection_collection');
define('UTAILLA_ORG_COLLECTION', 'ailla:organization_collection');
define('UTAILLA_ORG_CMODEL', 'ailla:organizationCModel');
define('UTAILLA_RESOURCE_CMODEL', 'ailla:resourceCModel');
define('UTAILLA_CONTRIBUTOR_COLLECTION', 'ailla:contributor_collection');
define('UTAILLA_CONTRIBUTOR_CMODEL', 'ailla:contributorCModel');
define('UTAILLA_LANGUAGE_CMODEL', 'ailla:languageCModel');
define('UTAILLA_COUNTRY_CMODEL', 'ailla:countryCModel');
// Migrations.
define('UTAILLA_USER_MIGRATION', 'UtaillaUser');
define('UTAILLA_CONTACT_MIGRATION', 'UtaillaContact');
define('UTAILLA_LIMIT_FOR_RESOURCE_IMPORT', 100);
// Relationships.
define('UTAILLA_USER_REL', 'hasAssociatedUser');
define('UTAILLA_CONTACT_REL', 'hasAssociatedContact');
// Autocomplete paths.
define('UTAILLA_PARENT_LANGUAGE_AUTOCOMPLETE', 'utailla/autocomplete/parentlanguage');
define('UTAILLA_COUNTRY_AUTOCOMPLETE', 'utailla/autocomplete/countries');
define('UTAILLA_CONTRIBUTOR_AUTOCOMPLETE', 'utailla/autocomplete/contributor');
define('UTAILLA_ORGANIZATION_AUTOCOMPLETE', 'utailla/autocomplete/organization');

// Second duration of media file authorization.
const UTAILLA_AUTHORIZATION_DURATION = 600;

// Restriction levels.
const UTAILLA_RESTRICTION_LEVEL_1 = 0;
const UTAILLA_RESTRICTION_LEVEL_2 = 1;
const UTAILLA_RESTRICTION_LEVEL_3 = 2;
const UTAILLA_RESTRICTION_LEVEL_4 = 3;

/**
 * Implements hook_menu().
 */
function utailla_menu() {
  $items = array();
  $items[UTAILLA_PARENT_LANGUAGE_AUTOCOMPLETE] = array(
    'title' => 'Autocomplete parent language callback',
    'description' => 'Autocomplete to get a language object\'s title.',
    'file' => 'includes/utailla.autocomplete.inc',
    'page callback' => 'utailla_title_by_model_autocomplete',
    'page arguments' => array(3, UTAILLA_LANGUAGE_CMODEL),
    'access arguments' => array(ISLANDORA_METADATA_EDIT),
    'type' => MENU_CALLBACK,
  );
  $items[UTAILLA_COUNTRY_AUTOCOMPLETE] = array(
    'title' => 'Autocomplete country callback',
    'description' => 'Autocomplete to get a country object\'s title.',
    'file' => 'includes/utailla.autocomplete.inc',
    'page callback' => 'utailla_title_by_model_autocomplete',
    'page arguments' => array(3, UTAILLA_COUNTRY_CMODEL),
    'access arguments' => array(ISLANDORA_METADATA_EDIT),
    'type' => MENU_CALLBACK,
  );
  $items[UTAILLA_CONTRIBUTOR_AUTOCOMPLETE] = array(
    'title' => 'Autocomplete collector/depositor callback',
    'description' => 'Autocomplete to get a contributor object\'s title.',
    'file' => 'includes/utailla.autocomplete.inc',
    'page callback' => 'utailla_title_by_model_autocomplete',
    'page arguments' => array(3, UTAILLA_CONTRIBUTOR_CMODEL),
    'access arguments' => array(ISLANDORA_METADATA_EDIT),
    'type' => MENU_CALLBACK,
  );
  $items['islandora/object/%islandora_object/manage/utailla_access_levels'] = array(
    'title' => 'Access Levels',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('utailla_access_level_form', 2),
    'access callback' => 'islandora_object_access',
    'access arguments' => array('administer utailla access levels', 2),
    'file' => 'includes/access_levels.form.inc',
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_islandora_required_objects().
 */
function utailla_islandora_required_objects(IslandoraTuque $connection) {
  module_load_include('inc', 'utailla', 'includes/utilities');
  $module_path = drupal_get_path('module', 'utailla');

  // Language content model.
  $language_cmodel = $connection->repository->constructObject(UTAILLA_LANGUAGE_CMODEL);
  $language_cmodel->owner = 'fedoraAdmin';
  $language_cmodel->label = 'Ailla Language Content Model';
  $language_cmodel->models = 'fedora-system:ContentModel-3.0';
  utailla_set_ds_composite($language_cmodel, 'language_composite_model.xml');

  // Language collection.
  $language_collection = $connection->repository->constructObject('ailla:language_collection');
  $language_collection->owner = 'fedoraAdmin';
  $language_collection->label = 'Language Collection';
  $language_collection->models = 'islandora:collectionCModel';
  $language_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  utailla_set_collection_policy($language_collection, 'language_collection_policy.xml');
  utailla_set_default_thumb($language_collection);

  // Country content model.
  $country_cmodel = $connection->repository->constructObject(UTAILLA_COUNTRY_CMODEL);
  $country_cmodel->owner = 'fedoraAdmin';
  $country_cmodel->label = 'Ailla Country Content Model';
  $country_cmodel->models = 'fedora-system:ContentModel-3.0';
  utailla_set_ds_composite($country_cmodel, 'country_composite_model.xml');

  // Country collection.
  $country_collection = $connection->repository->constructObject('ailla:country_collection');
  $country_collection->owner = 'fedoraAdmin';
  $country_collection->label = 'Country Collection';
  $country_collection->models = 'islandora:collectionCModel';
  $country_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  utailla_set_collection_policy($country_collection, 'country_collection_policy.xml');
  utailla_set_default_thumb($country_collection);

  // Collection collection.
  $collection_collection = $connection->repository->constructObject(UTAILLA_COLLECTION);
  $collection_collection->owner = 'fedoraAdmin';
  $collection_collection->label = 'Collections';
  $collection_collection->models = 'islandora:collectionCModel';
  $collection_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  utailla_set_collection_policy($collection_collection, 'collection_collection_policy.xml');

  // Organization collection.
  $org_collection = $connection->repository->constructObject(UTAILLA_ORG_COLLECTION);
  $org_collection->owner = 'fedoraAdmin';
  $org_collection->label = 'Organizations';
  $org_collection->models = 'islandora:collectionCModel';
  $org_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  utailla_set_default_thumb($org_collection);
  utailla_set_collection_policy($org_collection, 'organization_collection_policy.xml');

  // Organization content model.
  $org_cmodel = $connection->repository->constructObject(UTAILLA_ORG_CMODEL);
  $org_cmodel->owner = 'fedoraAdmin';
  $org_cmodel->label = 'Organization Content Model';
  $org_cmodel->models = 'fedora-system:ContentModel-3.0';
  utailla_set_ds_composite($org_cmodel, 'organization_composite_model.xml');

  // Resource content model.
  $resource_cmodel = $connection->repository->constructObject(UTAILLA_RESOURCE_CMODEL);
  $resource_cmodel->owner = 'fedoraAdmin';
  $resource_cmodel->label = 'Resource Content Model';
  $resource_cmodel->models = 'fedora-system:ContentModel-3.0';
  utailla_set_ds_composite($resource_cmodel, 'resource_composite_model.xml');

  // Contributor collection.
  $contributor_collection = $connection->repository->constructObject(UTAILLA_CONTRIBUTOR_COLLECTION);
  $contributor_collection->owner = 'fedoraAdmin';
  $contributor_collection->label = 'Contributors';
  $contributor_collection->models = 'islandora:collectionCModel';
  $contributor_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  utailla_set_default_thumb($contributor_collection);
  utailla_set_collection_policy($contributor_collection, 'contributor_collection_policy.xml');

  // Contributor content model.
  $contributor_cmodel = $connection->repository->constructObject(UTAILLA_CONTRIBUTOR_CMODEL);
  $contributor_cmodel->owner = 'fedoraAdmin';
  $contributor_cmodel->label = 'Contributor Content Model';
  $contributor_cmodel->models = 'fedora-system:ContentModel-3.0';
  utailla_set_ds_composite($contributor_cmodel, 'contributor_composite_model.xml');

  return array(
    'utailla' => array(
      'title' => t('AILLA'),
      'objects' => array(
        $language_cmodel,
        $language_collection,
        $country_cmodel,
        $country_collection,
        $org_collection,
        $org_cmodel,
        $contributor_collection,
        $contributor_cmodel,
        $collection_collection,
        $resource_cmodel,
      ),
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function utailla_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'utailla');
  return array(
    'Country MADS form' => array(
      'form_file' => "$module_path/xml/country_mads_form.xml",
    ),
    'Language form' => array(
      'form_file' => "$module_path/xml/language_form.xml",
    ),
    'Ailla Collection MODS form' => array(
      'form_file' => "$module_path/xml/collection_form.xml",
    ),
    'Ailla Resource MODS form' => array(
      'form_file' => "$module_path/xml/resource_form.xml",
    ),
    'Ailla Contributor MADS form' => array(
      'form_file' => "$module_path/xml/contributor_form.xml",
    ),
    'Ailla Organization MADS form' => array(
      'form_file' => "$module_path/xml/organization_form.xml",
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_form_associations().
 */
function utailla_islandora_xml_form_builder_form_associations() {
  return array(
    'ailla_country_mads_form' => array(
      'content_model' => UTAILLA_COUNTRY_CMODEL,
      'form_name' => 'Country MADS form',
      'dsid' => 'MADS',
      'title_field' => array('authority', 'english_name'),
      'transform' => FALSE,
      'template' => FALSE,
    ),
    'ailla_language_form' => array(
      'content_model' => UTAILLA_LANGUAGE_CMODEL,
      'form_name' => 'Language form',
      'dsid' => 'LANGUAGE',
      'title_field' => array('name_english'),
      'transform' => FALSE,
      'template' => FALSE,
    ),
    'ailla_collection_form' => array(
      'content_model' => 'islandora:collectionCModel',
      'form_name' => 'Ailla Collection MODS form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfoEnglish', 'title'),
      'transform' => FALSE,
      'template' => FALSE,
    ),
    'ailla_resource_form' => array(
      'content_model' => UTAILLA_RESOURCE_CMODEL,
      'form_name' => 'Ailla Resource MODS form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfoEnglish', 'title'),
      'transform' => FALSE,
      'template' => FALSE,
    ),
    'ailla_contributor_form' => array(
      'content_model' => UTAILLA_CONTRIBUTOR_CMODEL,
      'form_name' => 'Ailla Contributor MADS form',
      'dsid' => 'MADS',
      'title_field' => FALSE,
      'transform' => FALSE,
      'template' => FALSE,
    ),
    'ailla_organization_form' => array(
      'content_model' => UTAILLA_ORG_CMODEL,
      'form_name' => 'Ailla Organization MADS form',
      'dsid' => 'MADS',
      'title_field' => array('authority', 'name', 'given'),
      'transform' => FALSE,
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_permission().
 */
function utailla_permission() {
  $permission = array();

  $permission['administer utailla access levels'] = array(
    'title' => t('Administer Access Levels'),
    'description' => t('Permit access to the "Access Levels" form on collections, resources and files.'),
  );

  return $permission;
}

/**
 * Implements hook_islandora_object_ingested().
 *
 * Brings restriction up to Level 1.
 */
function utailla_islandora_object_ingested(AbstractObject $object) {
  module_load_include('inc', 'utailla', 'includes/utilities');
  module_load_include('inc', 'utailla', 'includes/db');
  module_load_include('inc', 'utailla', 'includes/access_levels.form');

  // See if this object already has a restriction and if it does ignore it.
  $restriction = FALSE;
  if (!utailla_get_restriction($object->id)) {
    // See if the collection the media file is a part of has a restriction set.
    // XXX: Is technically possible for a media file to not be part of a
    // resource.
    $ignore_models = array_merge(utailla_collection_like_models(), array('fedora-system:ContentModel-3.0'));
    if (!array_intersect($ignore_models, $object->models)) {
      $parent_rels = $object->relationships->get(FEDORA_RELS_EXT_URI, 'isMemberOfCollection');
      $parent_rels = reset($parent_rels);
      $parent_pid = $parent_rels['object']['value'];
      $parent_object = islandora_object_load($parent_pid);
      // See if this a collection or if we need to go one more level.
      if (in_array('islandora:collectionCModel', $object->models)) {
        $restriction = utailla_get_collection_restriction($parent_object->id);
      }
      else {
        $grandparent_rels = $parent_object->relationships->get(FEDORA_RELS_EXT_URI, 'isMemberOfCollection');
        $grandparent_rels = reset($grandparent_rels);
        $grandparent_pid = $grandparent_rels['object']['value'];
        $restriction = utailla_get_collection_restriction($grandparent_pid);
      }
      if ($restriction) {
        utailla_set_restriction($object, array(
          'level' => UTAILLA_RESTRICTION_LEVEL_1,
          'hint' => $restriction['hint'],
          'password' => $restriction['password'],
        ));
      }
    }
    if (!$restriction) {
      utailla_set_restriction($object, array('level' => UTAILLA_RESTRICTION_LEVEL_1));
    }
  }
}

/**
 * Implements hook_block_info().
 */
function utailla_block_info() {
  return array(
    'utailla_object_credentials' => array(
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages' => 'islandora/object/*',
      'cache' => DRUPAL_NO_CACHE,
      'info' => t('Object Credential Input'),
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function utailla_block_view($delta = '') {
  $to_render = array();

  switch ($delta) {
    case 'utailla_object_credentials':
      module_load_include('inc', 'utailla', 'includes/object_credentials');
      module_load_include('inc', 'utailla', 'includes/db');
      module_load_include('inc', 'utailla', 'includes/utilities');
      $object = menu_get_object('islandora_object', 2);
      $restriction = utailla_get_restriction($object->id);
      if ($object &&
        isset($restriction['password']) && $restriction['password'] &&
        !utailla_user_media_file_current_authorization($object->id)) {

        $to_render['subject'] = t('Unlock Object');
        $to_render['content'] = drupal_get_form(
          'utailla_object_credentials_form',
          $object
        );
      }
      break;
  }
  return $to_render;
}

/**
 * Implements hook_cron().
 *
 * Cleans out of date restrictions and authorizations.
 */
function utailla_cron() {
  module_load_include('inc', 'utailla', 'includes/db');
  utailla_remove_outdated_media_file_authorizations();
  utailla_update_outdated_media_file_restrictions();
}

/**
 * Implements hook_islandora_datastream_access().
 */
function utailla_islandora_datastream_access($op, $datastream, $user) {
  module_load_include('inc', 'utailla', 'includes/utilities');
  module_load_include('inc', 'utailla', 'includes/db');

  $lockable_dsids = utailla_lockable_dastastreams();
  $pid = $datastream->parent->id;
  $restriction = utailla_get_restriction($pid);
  if (in_array($datastream->id, $lockable_dsids) &&
    $restriction['level'] &&
    user_is_logged_in() &&
    !utailla_user_media_file_current_authorization($pid)) {

    return FALSE;

  }

  return NULL;
}

/**
 * Language Validation for Ailla Collection MODS Form.
 */
function utailla_validate_language_is_in_collection_language($element, &$form_state) {
  $collection_languages = array();
  foreach ($form_state['values']['languages_uri'] as $language) {
    if (!empty($language['language'])) {
      $collection_languages[] = $language['language'];
    }
  }
  if (isset($element['#value'])) {
    if (($element['#value'] && empty($collection_languages)) || ($element['#value'] && !empty($collection_languages) && !in_array($element['#value'], $collection_languages))) {
      form_error($element, t('@lang is not one of the current collection languages.', array('@lang' => $element['#value'])));
    }
  }
}

/**
 * Used by Ailla forms to set language label from hidden PID field.
 */
function utailla_convert_language_pid_to_title($form, $form_state) {
  global $base_url;
  if (isset($form['language_pid']['#value'])) {
    $pid = str_replace("$base_url/islandora/object/", "", $form['language_pid']['#value']);
    $obj = islandora_object_load($pid);
    if ($obj) {
      $form['language']['#value'] = $obj->label;
    }
  }
  return $form;
}

/**
 * Used by Ailla Collection MODS Form to country label from hidden PID field.
 */
function utailla_convert_country_pid_to_title($form, $form_state) {
  global $base_url;
  if (isset($form['country_pid']['#value'])) {
    $pid = str_replace("$base_url/islandora/object/", "", $form['country_pid']['#value']);
    $obj = islandora_object_load($pid);
    if ($obj) {
      $form['country_name']['#value'] = $obj->label;
    }
  }
  return $form;
}

/**
 * Used by Ailla MADS form to set organization label from hidden PID field.
 */
function utailla_convert_organization_pid_to_title($form, $form_state) {
  global $base_url;
  if (isset($form['organization_pid']['#value'])) {
    $pid = str_replace("$base_url/islandora/object/", "", $form['organization_pid']['#value']);
    $obj = islandora_object_load($pid);
    if ($obj) {
      $form['organization']['#value'] = $obj->label;
    }
  }
  return $form;
}

/**
 * Used by Ailla forms to set label from hidden PID field.
 */
function utailla_collection_build_uri_on_validate($element, &$form_state) {
  global $base_url;
  if (!empty($element['#value']) && strpos($element['#value'], $base_url) === FALSE) {
    module_load_include('inc', 'utailla', 'includes/utilities');
    form_set_value($element, utailla_get_uri_from_pid($element['#value']), $form_state);
  }
}

/**
 * Implements hook_cmodel_pid_dsid_islandora_datastream_alter().
 */
function utailla_ailla_contributorCModel_MADS_islandora_datastream_alter(AbstractObject $object, AbstractDatastream $datastream, array $context) {
  if ($context['action'] == 'ingest' || $context['action'] == 'modify') {
    // See if the label needs to be updated.
    $mads_xml = $datastream->content;
    $dom = new DOMDocument();
    $dom->loadXML($mads_xml);
    $xpath = new DOMXPath($dom);
    $xpath->registerNamespace('mads', 'http://www.loc.gov/mads/v2');
    $first_name = $xpath->evaluate('string(/mads:mads/mads:authority/mads:name[@type="personal"]/mads:namePart[@type="given"]/text())');
    $last_name = $xpath->evaluate('string(/mads:mads/mads:authority/mads:name[@type="personal"]/mads:namePart[@type="family"]/text())');
    if (!empty($first_name) || !empty($last_name)) {
      $label = '';
      if (!empty($first_name) && empty($last_name)) {
        $label = $first_name;
      }
      elseif (empty($first_name) && !empty($last_name)) {
        $label = $last_name;
      }
      elseif (!empty($first_name) && !empty($last_name)) {
        $label = "{$first_name} {$last_name}";
      }
      if ($object->label != $label) {
        $object->label = $label;
      }
    }
  }
}
